## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/wizard/setup
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_id:
        name: category_id
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
      name:
        name: name
        description: ''
        required: true
        example: error
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: 'Quasi error nam fugiat accusantium.'
        type: string
        custom: []
      images:
        name: images
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: true
        example:
          - null
        type: 'file[]'
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: true
        example: 0.1
        type: number
        custom: []
      location:
        name: location
        description: ''
        required: true
        example: magni
        type: string
        custom: []
      city_id:
        name: city_id
        description: ''
        required: true
        example: ad
        type: string
        custom: []
      country_id:
        name: country_id
        description: ''
        required: true
        example: distinctio
        type: string
        custom: []
      contacts:
        name: contacts
        description: ''
        required: true
        example:
          - saepe
        type: 'string[]'
        custom: []
      rating:
        name: rating
        description: 'Must not be greater than 5. Must be at least 1.'
        required: true
        example: 43
        type: number
        custom: []
      'contacts[].name':
        name: 'contacts[].name'
        description: 'Must not be greater than 100 characters.'
        required: true
        example: oyjelfgirpvipjqncpybq
        type: string
        custom: []
      'contacts[].number':
        name: 'contacts[].number'
        description: 'Must match the regex /^[0-9 ]+$/.'
        required: true
        example: '98099'
        type: number
        custom: []
    cleanBodyParameters:
      category_id: voluptatem
      name: error
      description: 'Quasi error nam fugiat accusantium.'
      postal_code: 0.1
      location: magni
      city_id: ad
      country_id: distinctio
      contacts:
        - saepe
      rating: 43
    fileParameters:
      images:
        - null
    responses:
      -
        status: 422
        content: '{"message":"The selected category id is invalid. (and 5 more errors)","errors":{"category_id":["The selected category id is invalid."],"city_id":["The selected city id is invalid."],"country_id":["The selected country id is invalid."],"rating":["The rating must not be greater than 5."],"contacts.0.name":["The contacts.0.name field is required."],"contacts.0.number":["The contacts.0.number field is required."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/products/{product_uuid}/{media_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Current Preview'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_uuid:
        name: product_uuid
        description: ''
        required: true
        example: d944821c-2ab0-4fe4-9195-c8372f0a153b
        type: string
        custom: []
      media_id:
        name: media_id
        description: 'The ID of the media.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      product_uuid: d944821c-2ab0-4fe4-9195-c8372f0a153b
      media_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/products
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show collection of products'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"5cb846fb-8da8-44dc-8e04-5c49b1bd3036","name":"Error id eos ullam voluptate est molestiae.","description":"Facilis tempora nostrum qui quae maxime officia voluptate eius. Est qui quo et voluptatem consectetur ea mollitia. Accusantium harum quidem consequatur est non officia quasi sit. Soluta neque amet ipsum quia ut. Explicabo consequatur iste eum incidunt autem. Consectetur quibusdam quo eum deleniti velit beatae. Provident quos necessitatibus ut. Magni quas voluptatum sunt eos modi quas laboriosam.","city":"stad","location":"Quod atque illo possimus et.","rate":"0,00","isPetAllowed":false}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/products/{uuid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show individual product'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: d944821c-2ab0-4fe4-9195-c8372f0a153b
        type: string
        custom: []
    cleanUrlParameters:
      uuid: d944821c-2ab0-4fe4-9195-c8372f0a153b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"06d59fa3-3f75-4e1b-803e-6ba423eb8850","name":"Aliquid dolor reiciendis sunt ipsam officia mollitia.","description":"Dolorem nemo corporis temporibus quo voluptatem facere exercitationem. Id nihil non est aperiam ipsum distinctio. Id nemo sit hic qui doloribus consequatur sit cum. Voluptas esse iste placeat accusantium. Beatae illo consequatur voluptatem eos dolorem libero labore. Deleniti sint sapiente quia voluptates aperiam. Est rerum voluptatem possimus et ut quo fugit.","city":"shire","location":"Voluptas reprehenderit aut est non incidunt qui.","rate":"0,00","isPetAllowed":false}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/categories
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show collection of categories'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":12,"name":"sapiente"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show each individual category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":14,"name":"omnis"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Delete existing category or it's subcategories"
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message":"Category deleted successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/reviews
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show collection of reviews'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"rating":4,"body":"Aut qui molestiae dolores ad. Nihil veniam quasi tenetur enim. Iste fugit dolore omnis earum. Incidunt qui est eum dolorem velit. Laboriosam quam consequatur dignissimos. Voluptatem est fuga voluptas vero. Alias architecto officia tempora debitis autem consequuntur officiis corrupti."}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/reviews/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show each individual category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the review.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"rating":2,"body":"Placeat numquam ut dolorem repellendus voluptatum voluptatem incidunt amet. Maiores quo non molestiae cumque excepturi molestiae. Magni qui eos non eos aut. Ut qui voluptas fugiat excepturi. Cumque quod optio itaque error excepturi. Omnis et eos consequuntur qui ullam enim cumque porro."}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/reviews/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete existing review'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the review.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/currencies/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the list of currencies fetched from api'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"name":null,"code":null,"value":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/currencies
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show collection of currencies'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"code":null,"name":null,"value":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/currencies
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new currency'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Code of the currency.'
        required: false
        example: USD
        type: required
        custom: []
      name:
        name: name
        description: 'Name of the currency.'
        required: true
        example: 'US Dollar'
        type: string
        custom: []
      value:
        name: value
        description: 'Value of the currency.'
        required: false
        example: 'US Dollar = 11000 Uzbek Sum,'
        type: required
        custom: []
    cleanBodyParameters:
      code: USD
      name: 'US Dollar'
      value: 'US Dollar = 11000 Uzbek Sum,'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"code":null,"name":null,"value":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/currencies/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show individual currency'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the currency.'
        required: true
        example: 18
        type: integer
        custom: []
    cleanUrlParameters:
      id: 18
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"code":null,"name":null,"value":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/currencies/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete existing currency'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the currency.'
        required: true
        example: 20
        type: integer
        custom: []
    cleanUrlParameters:
      id: 20
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User Register'
      description: 'This endpoint will allow to register users'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      firstname:
        name: firstname
        description: 'Firstname of user.'
        required: true
        example: Avaz
        type: string
        custom: []
      lastname:
        name: lastname
        description: 'Lastname of user.'
        required: true
        example: Akhmedov
        type: string
        custom: []
      surname:
        name: surname
        description: 'nullable  Surname of user.'
        required: false
        example: Something
        type: string
        custom: []
      birthdate:
        name: birthdate
        description: 'nullable  Birthdate of user.'
        required: false
        example: 1997.02.09
        type: date
        custom: []
      country_id:
        name: country_id
        description: 'constrained  City of user.'
        required: false
        example: Tashkent
        type: nullable
        custom: []
      city_id:
        name: city_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      primary_number:
        name: primary_number
        description: 'Main number of user.'
        required: true
        example: '99877822112'
        type: string
        custom: []
      number:
        name: number
        description: 'Second number of user.'
        required: true
        example: '99822133211'
        type: string
        custom: []
      optional_number:
        name: optional_number
        description: 'nullable  Optional number of user.'
        required: false
        example: '53121213123'
        type: string
        custom: []
      email:
        name: email
        description: 'unique Email of user.'
        required: true
        example: admin@gmail.com
        type: email
        custom: []
      password:
        name: password
        description: 'Password of user.'
        required: false
        example: 123asd2
        type: required
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Confirm previous password.'
        required: false
        example: 123asd2
        type: required
        custom: []
      gender:
        name: gender
        description: 'nullable  Gender of user.'
        required: false
        example: 'male or female'
        type: string
        custom: []
      preferred_contact_method:
        name: preferred_contact_method
        description: 'method of user to contact.Default email'
        required: false
        example: quasi
        type: Preferred
        custom: []
    cleanBodyParameters:
      firstname: Avaz
      lastname: Akhmedov
      surname: Something
      birthdate: 1997.02.09
      country_id: Tashkent
      primary_number: '99877822112'
      number: '99822133211'
      optional_number: '53121213123'
      email: admin@gmail.com
      password: 123asd2
      password_confirmation: 123asd2
      gender: 'male or female'
      preferred_contact_method: quasi
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"The birthdate is not a valid date. (and 1 more error)","errors":{"birthdate":["The birthdate is not a valid date."],"country_id":["The selected country id is invalid."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/verify
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Verify User'
      description: 'This endpoint will verify user and save him to database'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: ''
        required: false
        example: est
        type: required.
        custom: []
    cleanBodyParameters:
      code: est
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"firstname":"Richard","lastname":"Haley","country":"Turkey","primaryNumber":"13514773448","number":"15305913525","email":"tristian.towne@hotmail.com"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/resend-code
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Resend code to the user'
      description: 'This endpoint will send new code to the user by deleting previous one'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      number:
        name: number
        description: 'in users primary_number column.'
        required: false
        example: '9987872133'
        type: required.Exists
        custom: []
    cleanBodyParameters:
      number: '9987872133'
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"The selected number is invalid. (and 1 more error)","errors":{"number":["The selected number is invalid.","User is verified"]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User Login'
      description: 'This endpoint will allow to log in users'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {token}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Email of existing user.'
        required: false
        example: admin@gmail.com
        type: required
        custom: []
      password:
        name: password
        description: 'Password of existing user.'
        required: false
        example: 123asd2
        type: required
        custom: []
    cleanBodyParameters:
      email: admin@gmail.com
      password: 123asd2
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"firstname":"Russel","lastname":"Kris"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User Logout'
      description: 'This endpoint will allow to log out users'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization/Type:Bearer': 'Token. Example: 44|cSi4RtDPHw6vjnqiR3oKUP1x963fj1VcW9fMLmUF'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
