## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/products/{product_id}/{media_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Current Preview'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        custom: []
      media_id:
        name: media_id
        description: 'The ID of the media.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      product_id: 1
      media_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/products
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show collection of products'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":42,"name":"Eos enim amet nesciunt voluptas eum eligendi expedita voluptatum.","description":"Eius accusantium inventore voluptatem. Corrupti aut quasi rem fuga sapiente aperiam. Doloremque ipsam ipsam reprehenderit doloribus ut. Qui cum ratione quisquam doloribus magnam quaerat et. Recusandae hic rerum qui saepe labore quaerat vero iste.","category":"headset","brand":"dolorem","price":283.54,"reviews":[],"preview":null,"images":[],"attributes":[]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/products
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the product.'
        required: true
        example: 'gaming pc'
        type: string
        custom: []
      category_id:
        name: category_id
        description: ''
        required: true
        example: ut
        type: string
        custom: []
      brand_id:
        name: brand_id
        description: ''
        required: true
        example: necessitatibus
        type: string
        custom: []
      description:
        name: description
        description: 'Description of the product.'
        required: false
        example: 'this is the last gen gaming pc,'
        type: required
        custom: []
      price:
        name: price
        description: 'Price of the product.'
        required: false
        example: '120.99'
        type: required
        custom: []
      images:
        name: images
        description: 'array Image of the product.'
        required: false
        example: enim
        type: required
        custom: []
      attributes:
        name: attributes
        description: 'array Attributes of the product.'
        required: false
        example: color
        type: required
        custom: []
      'attributes[].name':
        name: 'attributes[].name'
        description: ''
        required: true
        example: fugit
        type: string
        custom: []
      'attributes[].value':
        name: 'attributes[].value'
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      category:
        name: category
        description: 'Category of the product.'
        required: false
        example: pc
        type: required
        custom: []
      brand:
        name: brand
        description: 'Brand of the product.'
        required: false
        example: samsung
        type: required
        custom: []
    cleanBodyParameters:
      name: 'gaming pc'
      category_id: ut
      brand_id: necessitatibus
      description: 'this is the last gen gaming pc,'
      price: '120.99'
      images: enim
      attributes: color
      category: pc
      brand: samsung
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":43,"name":"Quis est rem laudantium autem ex sit.","description":"Et omnis modi autem sint non corrupti. Consequuntur aut nemo doloribus ducimus doloremque distinctio eos esse. Sed asperiores occaecati sapiente et aut officia cum. Non adipisci quis ipsam dolore ut ab autem vitae. Eum velit accusantium sapiente distinctio et. Omnis fugiat aut dignissimos voluptatem. Rerum nemo qui repudiandae. Voluptas culpa magni vero sint qui deleniti. Et et occaecati voluptas cupiditate nostrum omnis eum. Et eligendi eaque nihil corporis ut suscipit suscipit.","category":"laptop","brand":"dolorem","price":773.21,"reviews":[],"preview":null,"images":[],"attributes":[]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"message\": \"new product created successfully\",\r\n  \"data\": {\r\n    \"id\": 4,\r\n    \"name\": \"gaming pc\",\r\n    \"description\": \"t is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy.\",\r\n    \"category\": \"pc\",\r\n    \"brand\": \"samsung\",\r\n    \"price\": 99.99\r\n  },\r\n\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/products/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show individual product'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":44,"name":"Ad non quo consequatur perspiciatis fuga.","description":"Ea temporibus assumenda nisi ducimus. Nihil quis similique est non. Repudiandae magni placeat tempora distinctio sint possimus debitis. Necessitatibus adipisci aspernatur dolore dolorem excepturi saepe sint. Eum ad debitis sed culpa minima dolore.","category":"gaming","brand":"dolorem","price":470.91,"reviews":[],"preview":null,"images":[],"attributes":[]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/products/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update existing product'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the product.'
        required: true
        example: 'gaming pc'
        type: string
        custom: []
      category_id:
        name: category_id
        description: ''
        required: true
        example: excepturi
        type: string
        custom: []
      brand_id:
        name: brand_id
        description: ''
        required: true
        example: placeat
        type: string
        custom: []
      description:
        name: description
        description: 'Description of the product.'
        required: false
        example: 'this is the last gen gaming pc,'
        type: required
        custom: []
      price:
        name: price
        description: 'Price of the product.'
        required: false
        example: '120.99'
        type: required
        custom: []
      images:
        name: images
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example:
          - null
        type: 'file[]'
        custom: []
      attributes:
        name: attributes
        description: 'array Attributes of the product.'
        required: false
        example: color
        type: required
        custom: []
      'attributes[].name':
        name: 'attributes[].name'
        description: ''
        required: true
        example: id
        type: string
        custom: []
      'attributes[].value':
        name: 'attributes[].value'
        description: ''
        required: true
        example: voluptates
        type: string
        custom: []
      category:
        name: category
        description: 'Category of the product.'
        required: false
        example: pc
        type: required
        custom: []
      brand:
        name: brand
        description: 'Brand of the product.'
        required: false
        example: samsung
        type: required
        custom: []
    cleanBodyParameters:
      name: 'gaming pc'
      category_id: excepturi
      brand_id: placeat
      description: 'this is the last gen gaming pc,'
      price: '120.99'
      attributes: color
      category: pc
      brand: samsung
    fileParameters:
      images:
        - null
    responses:
      -
        status: 200
        content: '{"data":{"id":45,"name":"Aut quia omnis voluptatem sapiente.","description":"Tempore voluptatum modi ullam et rerum nisi rerum atque. Nihil quis itaque error non at ea repellat. Voluptatibus voluptas aut harum natus nisi. Necessitatibus voluptatibus dicta consectetur ducimus dolor dignissimos dolores. Sequi accusantium ut eum id. Est assumenda eum vero ab. Tempore aspernatur et iusto perferendis non suscipit ut. Dolorem quae qui excepturi repudiandae. Ut aut quod sapiente unde tenetur eveniet ipsum. Vel est quo aliquid cumque.","category":"pc","brand":"voluptatem","price":515.92,"reviews":[],"preview":null,"images":[],"attributes":[]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"message\": \"proudct updated successfully\",\r\n  \"data\": {\r\n    \"id\": 4,\r\n    \"name\": \"gaming pc\",\r\n    \"description\": \"t is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy.\",\r\n    \"category\": \"pc\",\r\n    \"brand\": \"samsung\",\r\n    \"price\": 99.99\r\n  }\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/products/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete existing product'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message":"Product deleted successfully"
           }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/categories
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show collection of categories'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":11,"name":"voluptatem","childrens":[]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/categories
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the category.'
        required: true
        example: sport
        type: string
        custom: []
      parent_id:
        name: parent_id
        description: 'nullable ID of the parent category for subcategory.'
        required: false
        example: 18
        type: integer
        custom: []
    cleanBodyParameters:
      name: sport
      parent_id: 18
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":12,"name":"autem","childrens":[]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"data\": {\r\n    \"id\": 1,\r\n    \"name\": \"sport\",\r\n  }\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show each individual category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":13,"name":"ipsam","childrens":[]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Update existing category or it's subcategories"
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the category.'
        required: true
        example: sport
        type: string
        custom: []
      parent_id:
        name: parent_id
        description: 'nullable ID of the parent category for subcategory.'
        required: false
        example: 20
        type: integer
        custom: []
    cleanBodyParameters:
      name: sport
      parent_id: 20
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":14,"name":"officiis","childrens":[]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"data\": {\r\n    \"id\": 1,\r\n    \"name\": \"sport\",\r\n  }\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Delete existing category or it's subcategories"
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message":"Category deleted successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/reviews
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show collection of reviews'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"body":"Neque accusamus dolorem ipsa. Omnis magnam provident sapiente consequatur omnis et quis. Fugit vero ab voluptatum. Sequi quibusdam quaerat et inventore ullam ducimus. Suscipit occaecati sunt et exercitationem quis harum quod occaecati. Aut totam saepe repellat in."}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/reviews
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new review'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'string Body of the review.'
        required: false
        example: 'the worst product ever'
        type: required
        custom: []
      product_id:
        name: product_id
        description: 'ID of product related to the review'
        required: false
        example: assumenda
        type: required
        custom: []
    cleanBodyParameters:
      content: 'the worst product ever'
      product_id: assumenda
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"body":"Quod excepturi sed eum qui ipsam aut voluptates. Animi qui autem reiciendis quo consequatur. Quia minima velit omnis harum. At adipisci harum exercitationem perspiciatis ut iusto ut ut. Non quam beatae praesentium in molestiae saepe. Sit veritatis omnis quia in dolore aperiam provident. Totam rerum nemo sunt eveniet minus nam consequatur eaque."}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"message\": \"new review created successfully\",\r\n  \"data\": {\r\n    \"id\": 3,\r\n    \"content\": \"t is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy.\",\r\n    \"product_id\": 5\r\n  }\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/reviews/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show each individual category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the review.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"body":"Quaerat ducimus esse est natus sed. Voluptates ea nulla sequi. Pariatur nobis dolor quod quae eos ipsum. Officiis quasi laboriosam suscipit. Unde perferendis et deserunt atque iure."}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/reviews/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a existing resource'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the review.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'string Body of the review.'
        required: false
        example: 'the worst product ever'
        type: required
        custom: []
      product_id:
        name: product_id
        description: 'ID of product related to the review'
        required: false
        example: maiores
        type: required
        custom: []
    cleanBodyParameters:
      content: 'the worst product ever'
      product_id: maiores
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"body":"Animi repellat rerum illum eos. Labore dignissimos qui modi quae nam praesentium nisi. Esse illum repellendus dolor occaecati aut sed. Quia dolor et blanditiis eum."}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"message\": \"review updated successfully\",\r\n  \"data\": {\r\n    \"id\": 3,\r\n    \"content\": \"t is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy.\",\r\n    \"product_id\": 5\r\n  }\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/reviews/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete existing review'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the review.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/brands
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show collection of brands'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":11,"name":"est"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/brands
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new brand'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the brand. Example apple'
        required: false
        example: libero
        type: required
        custom: []
    cleanBodyParameters:
      name: libero
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":12,"name":"nam"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"message\": \"New brand created successfully\",\r\n  \"data\": {\r\n    \"id\": 3,\r\n    \"name\": \"Apple\"\r\n  }\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/brands/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show individual Brand'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":13,"name":"mollitia"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/brands/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing brand'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the brand. Example apple'
        required: false
        example: nulla
        type: required
        custom: []
    cleanBodyParameters:
      name: nulla
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":14,"name":"aut"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"message\": \"Brand updated created successfully\",\r\n  \"data\": {\r\n    \"id\": 3,\r\n    \"name\": \"Apple\"\r\n  }\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/brands/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete existing brand'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User Register'
      description: 'This endpoint will allow to register users'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'Username of user.'
        required: true
        example: Admin
        type: string
        custom: []
      email:
        name: email
        description: 'unique Email of user.'
        required: true
        example: admin@gmail.com
        type: email
        custom: []
      firstname:
        name: firstname
        description: 'Firstname of user.'
        required: true
        example: Avaz
        type: string
        custom: []
      lastname:
        name: lastname
        description: 'Lastname of user.'
        required: true
        example: Akhmedov
        type: string
        custom: []
      password:
        name: password
        description: 'Password of user.'
        required: false
        example: 123asd2
        type: required
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Confirm previous password.'
        required: false
        example: 123asd2
        type: required
        custom: []
    cleanBodyParameters:
      username: Admin
      email: admin@gmail.com
      firstname: Avaz
      lastname: Akhmedov
      password: 123asd2
      password_confirmation: 123asd2
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"username":"Prof. Reyes D''Amore","email":"delaney63@example.org","firstname":"Thomas Franecki DDS","lastname":"Fritsch"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"data\": {\r\n    \"username\": \"Avaz\",\r\n    \"email\": \"avaz@gmail.com\",\r\n    \"firstname\": \"Avaz\",\r\n    \"lastname\": \"Akhmedov\"\r\n  },\r\n  \"message\": \"User created successfully\"\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User Login'
      description: 'This endpoint will allow to log in users'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {token}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Email of existing user.'
        required: false
        example: admin@gmail.com
        type: required
        custom: []
      password:
        name: password
        description: 'Password of existing user.'
        required: false
        example: 123asd2
        type: required
        custom: []
    cleanBodyParameters:
      email: admin@gmail.com
      password: 123asd2
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"username":"Mr. Dominic Cruickshank","email":"cummerata.katherine@example.com","firstname":"Jany Purdy","lastname":"Ryan"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"token\": \"32|U888YUcdCveAbJWyeSR3Ndm06ibolHiUxghlxH3N\"\r\n  \"data\": {\r\n    \"username\": \"Avaz\",\r\n    \"email\": \"avaz@gmail.com\",\r\n    \"firstname\": \"Avaz\",\r\n    \"lastname\": \"Akhmedov\"\r\n  },\r\n  \"message\": \"Welcome back Avaz\"\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User Logout'
      description: 'This endpoint will allow to log out users'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization/Type:Bearer': 'Token. Example: 44|cSi4RtDPHw6vjnqiR3oKUP1x963fj1VcW9fMLmUF'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message":"User logged out"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
