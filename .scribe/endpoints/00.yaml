name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/products
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show collection of products'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":46,"name":"Nisi ad similique non eius exercitationem et est quaerat.","description":"Omnis labore qui iste dolorum voluptate molestias. Perspiciatis at explicabo unde vitae et expedita quia. Magni dolores velit et vel esse similique. Voluptatem repellendus est qui nihil consectetur. Est sequi aliquam optio voluptatem in et vel et.","category":"temporibus","brand":"facere","price":426.91,"reviews":[],"images":[]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/products
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the product.'
        required: true
        example: 'gaming pc'
        type: string
        custom: []
      category_id:
        name: category_id
        description: ''
        required: true
        example: accusamus
        type: string
        custom: []
      brand_id:
        name: brand_id
        description: ''
        required: true
        example: vel
        type: string
        custom: []
      description:
        name: description
        description: 'Description of the product.'
        required: false
        example: 'this is the last gen gaming pc,'
        type: required
        custom: []
      price:
        name: price
        description: 'Price of the product.'
        required: false
        example: '120.99'
        type: required
        custom: []
      images:
        name: images
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: true
        example:
          - null
        type: 'file[]'
        custom: []
      category:
        name: category
        description: 'Category of the product.'
        required: false
        example: pc
        type: required
        custom: []
      brand:
        name: brand
        description: 'Brand of the product.'
        required: false
        example: samsung
        type: required
        custom: []
      image:
        name: image
        description: 'Image of the product.'
        required: false
        example: aliquid
        type: required
        custom: []
    cleanBodyParameters:
      name: 'gaming pc'
      category_id: accusamus
      brand_id: vel
      description: 'this is the last gen gaming pc,'
      price: '120.99'
      category: pc
      brand: samsung
      image: aliquid
    fileParameters:
      images:
        - null
    responses:
      -
        status: 200
        content: '{"data":{"id":47,"name":"Omnis qui voluptatibus iusto eaque tempora magni.","description":"Inventore facilis inventore ab enim voluptatem incidunt. Hic eum voluptatibus optio quia. Quasi quo officia et maiores tenetur. Earum voluptatem inventore vitae molestias. Officiis at ut non est dolores aliquid et ut. At tempore facilis impedit dignissimos voluptatem laboriosam. Magnam distinctio aut voluptatum blanditiis unde qui omnis. Cum voluptas voluptas magni laudantium minima.","category":"gaming","brand":"facere","price":414.37,"reviews":[],"images":[]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"message\": \"new product created successfully\",\r\n  \"data\": {\r\n    \"id\": 4,\r\n    \"name\": \"gaming pc\",\r\n    \"description\": \"t is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy.\",\r\n    \"category\": \"pc\",\r\n    \"brand\": \"samsung\",\r\n    \"price\": 99.99\r\n  },\r\n\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/products/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show individual product'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":48,"name":"Labore suscipit voluptatem est amet laudantium.","description":"Mollitia sit rerum accusamus eum asperiores consequatur repellat. Cum omnis cupiditate voluptas. Omnis nihil ut laudantium a. In impedit magni assumenda omnis facere nisi animi. Rerum voluptate esse officia nostrum ad id illum. Voluptas sunt minima illo illum ea in iure.","category":"pc","brand":"modi","price":747.83,"reviews":[],"images":[]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/products/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update existing product'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the product.'
        required: true
        example: 'gaming pc'
        type: string
        custom: []
      category_id:
        name: category_id
        description: ''
        required: true
        example: asperiores
        type: string
        custom: []
      brand_id:
        name: brand_id
        description: ''
        required: true
        example: temporibus
        type: string
        custom: []
      description:
        name: description
        description: 'Description of the product.'
        required: false
        example: 'this is the last gen gaming pc,'
        type: required
        custom: []
      price:
        name: price
        description: 'Price of the product.'
        required: false
        example: '120.99'
        type: required
        custom: []
      images:
        name: images
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example:
          - null
        type: 'file[]'
        custom: []
      category:
        name: category
        description: 'Category of the product.'
        required: false
        example: pc
        type: required
        custom: []
      brand:
        name: brand
        description: 'Brand of the product.'
        required: false
        example: samsung
        type: required
        custom: []
    cleanBodyParameters:
      name: 'gaming pc'
      category_id: asperiores
      brand_id: temporibus
      description: 'this is the last gen gaming pc,'
      price: '120.99'
      category: pc
      brand: samsung
    fileParameters:
      images:
        - null
    responses:
      -
        status: 200
        content: '{"data":{"id":49,"name":"Aut modi est aut.","description":"Autem nihil reiciendis ratione et tempora. Perspiciatis fuga enim rerum voluptas optio. Earum omnis consectetur aliquam sint molestiae aut. Enim ut et quaerat totam. Impedit nihil quis sequi repudiandae eaque ad voluptatem. Delectus eum velit placeat aliquam minus blanditiis consequatur. Eaque non unde voluptatem. Enim nemo quo maiores.","category":"keyboard","brand":"aperiam","price":716.75,"reviews":[],"images":[]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"message\": \"proudct updated successfully\",\r\n  \"data\": {\r\n    \"id\": 4,\r\n    \"name\": \"gaming pc\",\r\n    \"description\": \"t is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy.\",\r\n    \"category\": \"pc\",\r\n    \"brand\": \"samsung\",\r\n    \"price\": 99.99\r\n  }\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/products/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete existing product'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message":"Product deleted successfully"
           }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/categories
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show collection of categories'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":15,"name":"molestiae","childrens":[]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/categories
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the category.'
        required: true
        example: sport
        type: string
        custom: []
      parent_id:
        name: parent_id
        description: 'nullable ID of the parent category for subcategory.'
        required: false
        example: 3
        type: integer
        custom: []
    cleanBodyParameters:
      name: sport
      parent_id: 3
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":16,"name":"voluptatem","childrens":[]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"data\": {\r\n    \"id\": 1,\r\n    \"name\": \"sport\",\r\n  }\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show each individual category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":17,"name":"consequuntur","childrens":[]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Update existing category or it's subcategories"
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the category.'
        required: true
        example: sport
        type: string
        custom: []
      parent_id:
        name: parent_id
        description: 'nullable ID of the parent category for subcategory.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanBodyParameters:
      name: sport
      parent_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":18,"name":"corporis","childrens":[]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"data\": {\r\n    \"id\": 1,\r\n    \"name\": \"sport\",\r\n  }\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Delete existing category or it's subcategories"
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message":"Category deleted successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/reviews
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show collection of reviews'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":45,"body":"Quas enim laborum consequuntur. Ut eaque eum accusantium dolor beatae autem et. Est voluptas laudantium est neque. Ipsam exercitationem molestiae libero rem doloribus voluptatem. Enim nam ducimus est dolor placeat explicabo omnis.","product_id":5}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/reviews
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new review'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'string Body of the review.'
        required: false
        example: 'the worst product ever'
        type: required
        custom: []
      product_id:
        name: product_id
        description: 'ID of product related to the review'
        required: false
        example: ducimus
        type: required
        custom: []
    cleanBodyParameters:
      content: 'the worst product ever'
      product_id: ducimus
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":46,"body":"Soluta rerum fuga id saepe. Aspernatur omnis tempore nihil nihil iste. Excepturi placeat beatae velit unde. Id et non ut.","product_id":19}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"message\": \"new review created successfully\",\r\n  \"data\": {\r\n    \"id\": 3,\r\n    \"content\": \"t is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy.\",\r\n    \"product_id\": 5\r\n  }\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/reviews/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show each individual category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the review.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":47,"body":"Eius incidunt vitae et odio repudiandae sunt. Aut libero esse inventore. Minus soluta voluptatem rem inventore laborum aut. Qui quod et eum eum.","product_id":6}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/reviews/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a existing resource'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the review.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'string Body of the review.'
        required: false
        example: 'the worst product ever'
        type: required
        custom: []
      product_id:
        name: product_id
        description: 'ID of product related to the review'
        required: false
        example: in
        type: required
        custom: []
    cleanBodyParameters:
      content: 'the worst product ever'
      product_id: in
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":48,"body":"Velit doloribus sint molestiae iure excepturi porro sunt. Exercitationem odio aut est assumenda assumenda. Debitis ut iusto ducimus sunt nulla doloremque deleniti fuga. Voluptatum corrupti iste et est.","product_id":40}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"message\": \"review updated successfully\",\r\n  \"data\": {\r\n    \"id\": 3,\r\n    \"content\": \"t is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy.\",\r\n    \"product_id\": 5\r\n  }\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/reviews/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete existing review'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the review.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/brands
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show collection of brands'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":15,"name":"velit"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/brands
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new brand'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the brand. Example apple'
        required: false
        example: nesciunt
        type: required
        custom: []
    cleanBodyParameters:
      name: nesciunt
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":16,"name":"ut"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"message\": \"New brand created successfully\",\r\n  \"data\": {\r\n    \"id\": 3,\r\n    \"name\": \"Apple\"\r\n  }\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/brands/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show individual Brand'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":17,"name":"excepturi"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/brands/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing brand'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the brand. Example apple'
        required: false
        example: non
        type: required
        custom: []
    cleanBodyParameters:
      name: non
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":18,"name":"et"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"message\": \"Brand updated created successfully\",\r\n  \"data\": {\r\n    \"id\": 3,\r\n    \"name\": \"Apple\"\r\n  }\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/brands/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete existing brand'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User Register'
      description: 'This endpoint will allow to register users'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'Username of user.'
        required: true
        example: Admin
        type: string
        custom: []
      email:
        name: email
        description: 'unique Email of user.'
        required: true
        example: admin@gmail.com
        type: email
        custom: []
      firstname:
        name: firstname
        description: 'Firstname of user.'
        required: true
        example: Avaz
        type: string
        custom: []
      lastname:
        name: lastname
        description: 'Lastname of user.'
        required: true
        example: Akhmedov
        type: string
        custom: []
      password:
        name: password
        description: 'Password of user.'
        required: false
        example: 123asd2
        type: required
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Confirm previous password.'
        required: false
        example: 123asd2
        type: required
        custom: []
    cleanBodyParameters:
      username: Admin
      email: admin@gmail.com
      firstname: Avaz
      lastname: Akhmedov
      password: 123asd2
      password_confirmation: 123asd2
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"username":"Ms. Shemar Sauer II","email":"deontae80@example.net","firstname":"Monroe Abernathy","lastname":"Erdman"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"data\": {\r\n    \"username\": \"Avaz\",\r\n    \"email\": \"avaz@gmail.com\",\r\n    \"firstname\": \"Avaz\",\r\n    \"lastname\": \"Akhmedov\"\r\n  },\r\n  \"message\": \"User created successfully\"\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User Login'
      description: 'This endpoint will allow to log in users'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {token}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Email of existing user.'
        required: false
        example: admin@gmail.com
        type: required
        custom: []
      password:
        name: password
        description: 'Password of existing user.'
        required: false
        example: 123asd2
        type: required
        custom: []
    cleanBodyParameters:
      email: admin@gmail.com
      password: 123asd2
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"username":"Austyn Kunde","email":"okeefe.joshua@example.com","firstname":"Eunice Sporer","lastname":"Windler"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"token\": \"32|U888YUcdCveAbJWyeSR3Ndm06ibolHiUxghlxH3N\"\r\n  \"data\": {\r\n    \"username\": \"Avaz\",\r\n    \"email\": \"avaz@gmail.com\",\r\n    \"firstname\": \"Avaz\",\r\n    \"lastname\": \"Akhmedov\"\r\n  },\r\n  \"message\": \"Welcome back Avaz\"\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User Logout'
      description: 'This endpoint will allow to log out users'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization/Type:Bearer': 'Token. Example: 44|cSi4RtDPHw6vjnqiR3oKUP1x963fj1VcW9fMLmUF'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message":"User logged out"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
